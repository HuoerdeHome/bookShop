<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.briup.demo.mapper.booksMapper">
    <resultMap id="bookResultMap"
               type="com.briup.demo.entity.Book">
        <result property="storeNum" column="store_num"/>
        <result property="categoryId" column="category_id"/>
        <association property="category"
                     select="com.briup.demo.mapper.categoryMapper.selectById"
                     column="category_id"/>
    </resultMap>
    <!--    嵌套查询-->


    <select id="list" resultMap="bookResultMap">
        select id, name, description,
        author, publisher, price, store_num, status, category_id
        from es_book
        <where>
            <if test="keyword">
                (
                name like concat('%',#{keyword},'%')
                or author like concat('%',#{keyword},'%')
                or publisher like concat('%',#{keyword},'%')
                )
            </if>
            <if test="categoryId">
                and
                category_id=#{categoryId}
            </if>
        </where>
    </select>

    <!-- 封装sql语句 -->
    <sql id="baseQuary">
        select *
        from es_book
    </sql>


    <select id="selectById"
            resultMap="bookResultMap">
        <include refid="baseQuary"/>
        where id=#{id}
    </select>

    <insert id="insert">
        INSERT INTO es_book (id, name, description, author, publisher, price, store_num, status, category_id)
        VALUES (#{id},
                #{name},
                #{description},
                #{author},
                #{publisher},
                #{price},
                #{storeNum},
                #{status},
                #{categoryId});
    </insert>

    <update id="update">
        update es_book
<!--        格式话语句标签set-->
        <set>
            <if test="name">
                name = #{name},
            </if>
            <if test="description">
                description = #{description},
            </if>
            <if test="author">
                author = #{author},
            </if>
            <if test="publisher">
                publisher = #{publisher},
            </if>
            <if test="price">
                price = #{price},
            </if>
            <if test="storeNum">
                store_num = #{storeNum},
            </if>
            <if test="categoryId">
                category_id = #{categoryId},
            </if>
<!--             默认不等于null和0-->
            <if test="status != null">
                status = #{status},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
        delete from
            es_book
        where id in
            <foreach collection="list"
                     open="(" close=")"
                     separator=", "
                     item="id">
                #{id}
            </foreach>
    </delete>

    <select id="pagesQuery"
            resultMap="bookResultMap">
        <include refid="baseQuary"/>
        where publisher like concat ('%',#{publisher},'%'),
        limit ${ (pagesNum-1)* pagesSize },${pagesSize}
    </select>

    <select id="pagesTotal" resultType="int">
        select count(*)
        from es_book
        where publisher like concat ('%',#{publisher},'%')
    </select>
</mapper>